{"ast":null,"code":"var _jsxFileName = \"/frontend/src/Users.js\";\nimport React, { useEffect, useState } from 'react';\nfunction Users() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/users').then(response => response.json()).then(data => {\n      setUsers(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching users', error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"User List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, user.name, \", \", user.email))));\n}\nexport default Users;","map":{"version":3,"names":["React","useEffect","useState","Users","users","setUsers","loading","setLoading","fetch","then","response","json","data","catch","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","user","key","id","name","email"],"sources":["/frontend/src/Users.js"],"sourcesContent":["import React, {useEffect,  useState} from 'react';\n\nfunction Users() {\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/users')\n            .then(response => response.json())\n            .then(data => {\n                setUsers(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching users', error);\n                setLoading(false);\n            });\n    }, []);\n\n    if(loading) return <p>Loading...</p>;\n\n    return (\n        <div>\n            <h2>User List</h2>\n            <ul>\n                {users.map(user => (\n                    <li key={user.id}>{user.name}, {user.email}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Users;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAGC,QAAQ,QAAO,OAAO;AAEjD,SAASC,KAAKA,CAAA,EAAG;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVP,QAAQ,CAACO,IAAI,CAAC;MACdL,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGD,OAAO,EAAE,oBAAON,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EAEpC,oBACItB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACItB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAClBtB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKlB,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACXxB,KAAA,CAAAgB,aAAA;IAAIS,GAAG,EAAED,IAAI,CAACE,EAAG;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,IAAI,CAACG,IAAI,EAAC,IAAE,EAACH,IAAI,CAACI,KAAU,CAClD,CACD,CACH,CAAC;AAEd;AAEA,eAAezB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}